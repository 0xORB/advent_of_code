{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/bin/part2.rs","byte_start":1138,"byte_end":1152,"line_start":36,"line_end":36,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"        let mut found_keys: Vec<_> = num_map.keys().filter(|&key| line.contains(key)).collect();","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/bin/part2.rs","byte_start":1138,"byte_end":1142,"line_start":36,"line_end":36,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut found_keys: Vec<_> = num_map.keys().filter(|&key| line.contains(key)).collect();","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/part2.rs:36:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   let mut found_keys: Vec<_> = num_map.keys().filter(|&key| line.contains(key)).co\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"message":"for loop over an `Option`. This is more readably written as an `if let` statement","code":{"code":"for_loops_over_fallibles","explanation":null},"level":"warning","spans":[{"file_name":"src/bin/part2.rs","byte_start":1111,"byte_end":1123,"line_start":35,"line_end":35,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"    for line in lines.next() {","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(for_loops_over_fallibles)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to iterate over `lines` remove the call to `next`","code":null,"level":"help","spans":[{"file_name":"src/bin/part2.rs","byte_start":1116,"byte_end":1123,"line_start":35,"line_end":35,"column_start":22,"column_end":29,"is_primary":true,"text":[{"text":"    for line in lines.next() {","highlight_start":22,"highlight_end":29}],"label":null,"suggested_replacement":".by_ref()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider using `if let` to clear intent","code":null,"level":"help","spans":[{"file_name":"src/bin/part2.rs","byte_start":1099,"byte_end":1103,"line_start":35,"line_end":35,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    for line in lines.next() {","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":"if let Some(","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/bin/part2.rs","byte_start":1099,"byte_end":2234,"line_start":35,"line_end":62,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    for line in lines.next() {","highlight_start":5,"highlight_end":31},{"text":"        let mut found_keys: Vec<_> = num_map.keys().filter(|&key| line.contains(key)).collect();","highlight_start":1,"highlight_end":97},{"text":"        if !found_keys.is_empty() {","highlight_start":1,"highlight_end":36},{"text":"            println!(\"Keys found in the string: {:?}\", found_keys);","highlight_start":1,"highlight_end":68},{"text":"        } else {","highlight_start":1,"highlight_end":17},{"text":"            println!(\"No keys found in the string.\");","highlight_start":1,"highlight_end":54},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        for c in line.chars() {","highlight_start":1,"highlight_end":32},{"text":"            if let Some(digit) = c.to_digit(10) {","highlight_start":1,"highlight_end":50},{"text":"                nums.push(digit);","highlight_start":1,"highlight_end":34},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        // println!(\"{:?}\", nums);","highlight_start":1,"highlight_end":35},{"text":"        if nums.len() >= 2 {","highlight_start":1,"highlight_end":29},{"text":"            let line_value = nums[0].to_string() + nums[nums.len() - 1].to_string().as_str();","highlight_start":1,"highlight_end":94},{"text":"            // println!(\"{}\", line_value);","highlight_start":1,"highlight_end":43},{"text":"            // println!(\"-----\\n\\n\");","highlight_start":1,"highlight_end":38},{"text":"            // let parsed_num = line_value.parse::<i32>().unwrap();","highlight_start":1,"highlight_end":68},{"text":"            result_nums.push(line_value.parse::<i32>().unwrap());","highlight_start":1,"highlight_end":66},{"text":"        } else {","highlight_start":1,"highlight_end":17},{"text":"            let line_value = nums[0].to_string() + nums[0].to_string().as_str();","highlight_start":1,"highlight_end":81},{"text":"            result_nums.push(line_value.parse::<i32>().unwrap());","highlight_start":1,"highlight_end":66},{"text":"            // println!(\"{}\", line_value);","highlight_start":1,"highlight_end":43},{"text":"            // println!(\"-----\\n\\n\");","highlight_start":1,"highlight_end":38},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        nums.clear();","highlight_start":1,"highlight_end":22},{"text":"        // println!(\"{:?}\", v)","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `for` loop","def_site_span":{"file_name":"src/bin/part2.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/bin/part2.rs","byte_start":1107,"byte_end":1111,"line_start":35,"line_end":35,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    for line in lines.next() {","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":") = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: for loop over an `Option`. This is more readably written as an `if let` statement\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/part2.rs:35:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for line in lines.next() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(for_loops_over_fallibles)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: to iterate over `lines` remove the call to `next`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    for line in lines\u001b[0m\u001b[0m\u001b[38;5;10m.by_ref()\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider using `if let` to clear intent\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mif let Some(\u001b[0m\u001b[0mline\u001b[0m\u001b[0m\u001b[38;5;10m) = \u001b[0m\u001b[0mlines.next() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m~~~\u001b[0m\n\n"}
{"message":"2 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 2 warnings emitted\u001b[0m\n\n"}
